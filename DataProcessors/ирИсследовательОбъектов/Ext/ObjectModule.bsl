//ирПортативный Перем ирПортативный Экспорт;
//ирПортативный Перем ирОбщий Экспорт;
//ирПортативный Перем ирСервер Экспорт;
//ирПортативный Перем ирКэш Экспорт;
//ирПортативный Перем ирПривилегированный Экспорт;

#Если Клиент Тогда

// Открывает объект в исследователе объектов.
//
// Параметры:
//  Объект       – Произвольный.
//
// Возвращаемое значение:
//  Не используется.
//
Функция ИсследоватьОбъект(Объект, Модально = Истина) Экспорт 
	
	ФормаИсследователя = ирОбщий.ПолучитьФормуЛкс(Метаданные().ПолноеИмя() + ".Форма.ИсследовательОбъектов", , , Объект);
	ФормаИсследователя.УстановитьИсследуемоеЗначение(Объект);
	Если Модально Тогда 
		Результат = ФормаИсследователя.ОткрытьМодально();
	Иначе
		Результат = Неопределено;
		ФормаИсследователя.Открыть();
	КонецЕсли;
	Возврат Результат;

КонецФункции // ИсследоватьОбъект()

// Открывает объект в исследователе объектов.
//
// Параметры:
//  Объект       – Произвольный.
//
// Возвращаемое значение:
//  Не используется.
//
Функция ИсследоватьКоллекцию(Коллекция, Модально = Истина, БезСлужебныхКолонок = Истина) Экспорт 
	
	ФормаИсследователя = ирОбщий.ПолучитьФормуЛкс(Метаданные().ПолноеИмя() + ".Форма.ИсследовательКоллекций", , , Коллекция);
	ФормаИсследователя.УстановитьИсследуемоеЗначение(Коллекция, , , БезСлужебныхКолонок);
	Если Модально Тогда 
		Результат = ФормаИсследователя.ОткрытьМодально();
	Иначе
		Результат = Неопределено;
		ФормаИсследователя.Открыть();
	КонецЕсли;
	Возврат Результат;

КонецФункции // ИсследоватьКоллекцию()

//ирПортативный #Если Клиент Тогда
//ирПортативный Контейнер = Новый Структура();
//ирПортативный Оповестить("ирПолучитьБазовуюФорму", Контейнер);
//ирПортативный Если Не Контейнер.Свойство("ирПортативный", ирПортативный) Тогда
//ирПортативный 	ПолноеИмяФайлаБазовогоМодуля = ВосстановитьЗначение("ирПолноеИмяФайлаОсновногоМодуля");
//ирПортативный 	ирПортативный = ВнешниеОбработки.ПолучитьФорму(ПолноеИмяФайлаБазовогоМодуля);
//ирПортативный КонецЕсли; 
//ирПортативный ирОбщий = ирПортативный.ПолучитьОбщийМодульЛкс("ирОбщий");
//ирПортативный ирКэш = ирПортативный.ПолучитьОбщийМодульЛкс("ирКэш");
//ирПортативный ирСервер = ирПортативный.ПолучитьОбщийМодульЛкс("ирСервер");
//ирПортативный ирПривилегированный = ирПортативный.ПолучитьОбщийМодульЛкс("ирПривилегированный");
//ирПортативный #КонецЕсли

ирКэш.Получить().ИнициализацияОписанияМетодовИСвойств();

#КонецЕсли
